{"version":3,"sources":["components/InfoBox/InfoBox.jsx","components/LineChart/LineChart.jsx","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","value","total","className","Card","CardContent","Typography","variant","component","color","LineChart","country","useState","countryCases","setCountryCases","days","setDays","useEffect","a","url","axios","get","response","data","cases","timeline","buildChartData","getHistoricalData","lastDataPoint","date","newDataPoint","push","FormControl","Select","onChange","e","target","MenuItem","width","height","margin","top","right","bottom","left","stroke","dataKey","type","App","countries","setCountries","setCountry","countryInfo","setCountryInfo","map","name","iso3","key","_id","flag","filter","getData","getCountryData","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wXAqBeA,G,OAhBC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC/B,OACE,qBAAKC,UAAU,UAAf,SACE,cAACC,EAAA,EAAD,CAAMD,UAAU,gBAAhB,SACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,SACGR,IAEH,cAACM,EAAA,EAAD,UAAaL,IACb,eAACK,EAAA,EAAD,CAAYG,MAAM,gBAAlB,oBAA0CP,c,QC+FrCQ,G,OA7FG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACOC,mBAAS,IADhB,mBAC1BC,EAD0B,KACZC,EADY,OAETF,mBAAS,IAFA,mBAE1BG,EAF0B,KAEpBC,EAFoB,KAIjCC,qBAAU,WAAM,4CACd,kCAAAC,EAAA,6DACMC,EACU,cAAZR,EAAA,iEAC8DI,GAD9D,oDAEiDJ,EAFjD,qBAEqEI,GAJzE,SAMuBK,IAAMC,IAAIF,GANjC,OAMMG,EANN,OAQMC,EACU,cAAZZ,EACIW,EAASC,KAAKC,MACdF,EAASC,KAAKE,SAASD,MAEzBX,EAAea,EAAeH,GAClCT,EAAgBD,GAdlB,4CADc,uBAAC,WAAD,wBAkBdc,KACC,CAAChB,EAASI,IAEb,IAAMW,EAAiB,SAACH,GACtB,IACIK,EADEf,EAAe,GAGrB,IAAK,IAAIgB,KAAQN,EAAM,CACrB,GAAIK,EAAe,CACjB,IAAIE,EAAe,CACjBD,KAAMA,EACN,YAAaN,EAAKM,GAAQD,GAE5Bf,EAAakB,KAAKD,GAEpBF,EAAgBL,EAAKM,GAGvB,OAAOhB,GAOT,OACE,sBAAKV,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,mBAAf,kCACA,qBAAKA,UAAU,kBAAf,SACE,cAAC6B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQhC,MAAOc,EAAMmB,SAVV,SAACC,GACpBnB,EAAQmB,EAAEC,OAAOnC,QASoCM,QAAQ,WAArD,UACE,cAAC8B,EAAA,EAAD,CAAUpC,MAAM,IAAhB,mBAAyB,GAGzB,cAACoC,EAAA,EAAD,CAAUpC,MAAM,KAAhB,oBAA0B,IAG1B,cAACoC,EAAA,EAAD,CAAUpC,MAAM,KAAhB,oBAA0B,cAOlC,qBAAKE,UAAU,mBAAf,SACE,cAAC,IAAD,CAAqBmC,MAAO,OAAQC,OAAQ,IAA5C,SACE,eAAC,IAAD,CACED,MAAO,IACPC,OAAQ,IACRhB,KAAMV,EACN2B,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IARV,UAWE,cAAC,IAAD,CAAeC,OAAO,YACtB,cAAC,IAAD,CAAOC,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAMC,KAAK,UAAUD,QAAQ,YAAYD,OAAO,8B,OCM7CG,MAnGf,WAAgB,IAAD,EACqBpC,mBAAS,IAD9B,mBACNqC,EADM,KACKC,EADL,OAEiBtC,mBAAS,aAF1B,mBAEND,EAFM,KAEGwC,EAFH,OAGyBvC,mBAAS,IAHlC,mBAGNwC,EAHM,KAGOC,EAHP,KAoDb,OA/CApC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACuBE,IAAMC,IACzB,4CAFJ,cACMC,EADN,gBAKmBA,EAASC,KAL5B,OAKMA,EALN,OAUQ0B,EAAY1B,EACf+B,KAAI,SAAC3C,GAAD,MAAc,CACjB4C,KAAM5C,EAAQA,QACdV,MAAOU,EAAQyC,YAAYI,KAC3BC,IAAK9C,EAAQyC,YAAYM,IACzBC,KAAMhD,EAAQyC,YAAYO,SAE3BC,QAAO,SAACjD,GAAD,OAA6B,OAAhBA,EAAQ8C,OAE/BP,EAAaD,GAnBf,4CADc,uBAAC,WAAD,wBAuBdY,KACC,IAEH5C,qBAAU,WAAM,4CACd,gCAAAC,EAAA,6DACMC,EACU,cAAZR,EACI,qCADJ,mDAEgDA,GAJpD,SAMuBS,IAAMC,IAAIF,GANjC,OAMMG,EANN,OAOQ8B,EAAc9B,EAASC,KAE7B8B,EAAeD,GATjB,4CADc,uBAAC,WAAD,wBAadU,KACC,CAACnD,IAQF,sBAAKR,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,8BACA,cAAC6B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAQhC,MAAOU,EAASuB,SAVR,SAACC,GACvB,IAAIxB,EAAUwB,EAAEC,OAAOnC,MACvBkD,EAAWxC,IAQ8CJ,QAAQ,WAA3D,UACE,cAAC8B,EAAA,EAAD,CAAUpC,MAAM,YAAhB,sBAAiC,GAGhCgD,EAAUK,KAAI,gBAAGrD,EAAH,EAAGA,MAAOwD,EAAV,EAAUA,IAAKF,EAAf,EAAeA,KAAf,OACb,cAAClB,EAAA,EAAD,CAAUpC,MAAOA,EAAjB,SACGsD,GAD0BE,cAOrC,sBAAKtD,UAAU,wBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAM,YACNC,MAAOmD,EAAYW,WACnB7D,MAAOkD,EAAY5B,UAGvB,qBAAKrB,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAM,iBACNC,MAAOmD,EAAYY,eACnB9D,MAAOkD,EAAYa,cAGvB,qBAAK9D,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAM,aACNC,MAAOmD,EAAYc,YACnBhE,MAAOkD,EAAYe,cAIzB,qBAAKhE,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWQ,QAASA,UCzFbyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8bc4ed3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nimport \"./InfoBox.css\";\r\n\r\nconst InfoBox = ({ title, value, total }) => {\r\n  return (\r\n    <div className=\"infoBox\">\r\n      <Card className=\"infoBox__card\">\r\n        <CardContent>\r\n          <Typography variant=\"h6\" component=\"h1\">\r\n            {title}\r\n          </Typography>\r\n          <Typography>{value}</Typography>\r\n          <Typography color=\"textSecondary\">Total: {total}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nimport \"./LineChart.css\";\r\n\r\nconst LineChart = ({ country }) => {\r\n  const [countryCases, setCountryCases] = useState([]);\r\n  const [days, setDays] = useState(31);\r\n\r\n  useEffect(() => {\r\n    async function getHistoricalData() {\r\n      let url =\r\n        country === \"worldwide\"\r\n          ? `https://disease.sh/v3/covid-19/historical/all?lastdays=${days}`\r\n          : `https://disease.sh/v3/covid-19/historical/${country}?lastdays=${days}`;\r\n\r\n      let response = await axios.get(url);\r\n\r\n      let data =\r\n        country === \"worldwide\"\r\n          ? response.data.cases\r\n          : response.data.timeline.cases;\r\n\r\n      let countryCases = buildChartData(data);\r\n      setCountryCases(countryCases);\r\n    }\r\n\r\n    getHistoricalData();\r\n  }, [country, days]);\r\n\r\n  const buildChartData = (data) => {\r\n    const countryCases = [];\r\n    let lastDataPoint;\r\n\r\n    for (let date in data) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          date: date,\r\n          \"New Cases\": data[date] - lastDataPoint,\r\n        };\r\n        countryCases.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[date];\r\n    }\r\n\r\n    return countryCases;\r\n  };\r\n\r\n  const onDaysChange = (e) => {\r\n    setDays(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"lineChart\">\r\n      <div className=\"lineChart__header\">\r\n        <div className=\"lineChart__title\">Historical New Cases</div>\r\n        <div className=\"lineChart__form\">\r\n          <FormControl>\r\n            <Select value={days} onChange={onDaysChange} variant=\"outlined\">\r\n              <MenuItem value=\"8\" key={8}>\r\n                7 Days\r\n              </MenuItem>\r\n              <MenuItem value=\"15\" key={15}>\r\n                14 Days\r\n              </MenuItem>\r\n              <MenuItem value=\"31\" key={31}>\r\n                30 Days\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className=\"lineChart__chart\">\r\n        <ResponsiveContainer width={\"100%\"} height={475}>\r\n          <ComposedChart\r\n            width={1000}\r\n            height={500}\r\n            data={countryCases}\r\n            margin={{\r\n              top: 20,\r\n              right: 20,\r\n              bottom: 20,\r\n              left: 10,\r\n            }}\r\n          >\r\n            <CartesianGrid stroke=\"#f5f5f5\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"natural\" dataKey=\"New Cases\" stroke=\"rebeccapurple\" />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FormControl, Select, MenuItem } from \"@material-ui/core\";\nimport InfoBox from \"./components/InfoBox/InfoBox.jsx\";\nimport LineChart from \"./components/LineChart/LineChart.jsx\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n\n  useEffect(() => {\n    async function getData() {\n      let response = await axios.get(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n\n      let data = await response.data;\n\n      // Create an array of objects\n      // Objects have a name, value and key property\n      // Filter any countries that have an id of null\n      const countries = data\n        .map((country) => ({\n          name: country.country,\n          value: country.countryInfo.iso3,\n          key: country.countryInfo._id,\n          flag: country.countryInfo.flag,\n        }))\n        .filter((country) => country.key !== null);\n\n      setCountries(countries);\n    }\n\n    getData();\n  }, []);\n\n  useEffect(() => {\n    async function getCountryData() {\n      let url =\n        country === \"worldwide\"\n          ? \"https://disease.sh/v3/covid-19/all\"\n          : `https://disease.sh/v3/covid-19/countries/${country}`;\n\n      let response = await axios.get(url);\n      const countryInfo = response.data;\n\n      setCountryInfo(countryInfo);\n    }\n\n    getCountryData();\n  }, [country]);\n\n  const onCountryChange = (e) => {\n    let country = e.target.value;\n    setCountry(country);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <div className=\"app__title\">COVID 19 TRACKER</div>\n        <FormControl>\n          <Select value={country} onChange={onCountryChange} variant=\"outlined\">\n            <MenuItem value=\"worldwide\" key={0}>\n              Worldwide\n            </MenuItem>\n            {countries.map(({ value, key, name }) => (\n              <MenuItem value={value} key={key}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n      <div className=\"app__infoBoxContainer\">\n        <div className=\"app__infoBox\">\n          <InfoBox\n            title=\"New Cases\"\n            value={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n        </div>\n        <div className=\"app__infoBox\">\n          <InfoBox\n            title=\"New Recoveries\"\n            value={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n        </div>\n        <div className=\"app__infoBox\">\n          <InfoBox\n            title=\"New Deaths\"\n            value={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n      </div>\n      <div className=\"app__lineChart\">\n        <LineChart country={country} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}